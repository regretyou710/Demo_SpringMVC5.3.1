<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 自動掃描包 -->
	<context:component-scan
		base-package="tw.com.mvc.controller,tw.com.mvc.interceptors"></context:component-scan>

	<!-- 配置Thymeleaf視圖解析器 -->
	<bean id="viewResolver"
		class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
		<!-- 視圖配置多個時可設定優先順序 -->
		<property name="order" value="1" />

		<property name="characterEncoding" value="UTF-8" />
		<property name="templateEngine">
			<bean class="org.thymeleaf.spring5.SpringTemplateEngine">
				<property name="templateResolver">
					<bean
						class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

						<!-- 視圖首碼 -->
						<property name="prefix" value="/WEB-INF/templates/" />

						<!-- 視圖尾碼 -->
						<property name="suffix" value=".html" />
						<property name="templateMode" value="HTML5" />
						<property name="characterEncoding" value="UTF-8" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- 配置文件上傳解析器，將上傳的文件封裝到MultipartFile -->
	<!-- bean class只能配置實體類，MultipartResolver是interface -->
	<!-- 在springMVC中，是以id方式獲取bean，並且id必須為multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

	<!-- 配置視圖控制器 -->
	<mvc:view-controller path="/" view-name="index" />

	<mvc:annotation-driven />

	<!-- 靜態資源在被訪問時，會先被DispatcherServlet進行處理(springMVC.xml) -->
	<!-- 如果在DispatcherServlet中找不到相對應的請求映射，就會交給默認的servlet進行處理 -->
	<!-- 如果默認的servlet能找到資源，就訪問資源 -->
	<!-- 如果默認的servlet找不到資源，就報404 -->
	<!-- 開放對靜態資源的訪問 -->
	<mvc:default-servlet-handler />

	<!-- 配置攔截器 -->
	<mvc:interceptors>
		<!-- 只配置一個bean，會對所有的請求進行攔截 -->
		<!-- <bean class="tw.com.mvc.interceptors.Interceptor1"></bean> -->

		<!-- 將Interceptor1改為註解方式配置bean(需掃描tw.com.mvc.interceptor) -->
		<!-- 多個攔截器的執行順序: -->
		<!-- preHandle會依照配置的順序執行，postHandle及afterCompletion會照配置反序執行 -->
		<ref bean="interceptor1" />
		<bean class="tw.com.mvc.interceptors.Interceptor2" />

		<!-- 以上兩種配置方式都是對DispatcherServlet所處理的所有的請求進行攔截 -->

		<!-- 透過請求映射路徑設定攔截 -->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/" />
			<ref bean="interceptor1" />
		</mvc:interceptor> -->
	</mvc:interceptors>
</beans>
